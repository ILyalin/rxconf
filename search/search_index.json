{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p> RxConf library, easy to use, powerful and flexible for configuration management in Python </p> <p> </p> <p>Documentation: https://realkarych.github.io/rxconf/</p> <p>Source code: https://github.com/realkarych/rxconf/</p>  Currently in develop...  <ul> <li> Implement config loaders:</li> <ul> <li> Implement base class which will be inherited by concrete loaders</li> <li> Implement Environment Variables &amp; <code>dotenv</code> loader</li> <li> Implement <code>yaml</code> loader</li> <li> Implement <code>toml</code> loader</li> <li> Implement <code>ini</code> loader</li> <li> Implement <code>json</code> loader</li> </ul> <li> Implement reactive config-state observer.</li> <li> Implement async reactive config-state observer.</li> <li> Introduce testing strategy: validation, race conditions etc.</li> <li> Introduce core API structure and interfaces.</li> <li> Provide examples and use cases for all public interfaces.</li> </ul>"},{"location":"development/contributing/","title":"Contributing Guidelines","text":"<p>Thank you for your interest in contributing to RxConf!</p> <p>Please take a moment to review the following guidelines before submitting your contribution.</p>"},{"location":"development/contributing/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Getting Started</li> <li>Submitting Contributions</li> <li>Code Style</li> <li>Testing</li> <li>Documentation</li> <li>Issue Reporting</li> </ul>"},{"location":"development/contributing/#getting-started","title":"Getting Started","text":"<p>Setup your development environment: Setup guide.</p>"},{"location":"development/contributing/#submitting-contributions","title":"Submitting Contributions","text":"<p>When submitting your contribution, please ensure the following:</p> <ul> <li>Minimized count of commits.</li> <li>Your code follows our code style guidelines.</li> <li>Your changes are well-documented and include any necessary updates to the project's documentation.</li> <li>Your changes do not introduce any breaking changes or regressions.</li> <li>Provided descriptive commits' titles. Use emoji notation:</li> </ul> Topic Alias Version tag \ud83d\udd16 <code>:bookmark:</code> New feature \u2728 <code>:sparkles:</code> Bugfix \ud83d\udc1b <code>:bug:</code> Documentation \ud83d\udcda <code>:books:</code> Performance \ud83c\udfc7 <code>:racehorse:</code> Tests \u2705 <code>:white_check_mark:</code> General update \ud83d\ude80 <code>:rocket:</code> Improve format/structure \ud83c\udfa8 <code>:art:</code> Refactor code \ud83d\udd28 <code>:hammer:</code> Removing code/files \ud83d\udd25 <code>:fire:</code> Continuous Integration \ud83d\udc77 <code>:construction_worker:</code> Security \ud83d\udd12 <code>:lock:</code> Upgrading dependencies \u2b06\ufe0f <code>:arrow_up:</code> Downgrading dependencies \u2b07\ufe0f <code>:arrow_down:</code> Critical hotfix \ud83d\ude91 <code>:ambulance:</code> Configuration files \ud83d\udd27 <code>:wrench:</code> Reverting changes \u23ea <code>:rewind:</code> Breaking changes \ud83d\udca5 <code>:boom:</code> Movements \ud83d\ude9a <code>:truck:</code>"},{"location":"development/contributing/#code-style","title":"Code Style","text":"<p>We follow a specific code style in our project. Please make sure to adhere to the following guidelines:</p> <ul> <li>Follow all PEP8 guidelines.</li> <li>Use meaningful variable and function names.</li> <li>Avoid of addition comments.</li> <li>Add docstrings for all public interfaces.</li> <li>Follow the main Clean Code patterns.</li> </ul>"},{"location":"development/contributing/#testing","title":"Testing","text":"<p>We highly encourage contributors to write tests for their code. Please ensure that your changes are thoroughly tested and that all existing tests pass.</p> <p>Our goal is to have 100% of code coverage (for public interfaces).</p>"},{"location":"development/contributing/#documentation","title":"Documentation","text":"<p>Documentation deploys automatically via pushing to main.</p> <p>Improving the project's documentation is always appreciated. If you make any changes that require updates to the documentation, please include those updates in your contribution.</p>"},{"location":"development/contributing/#issue-reporting","title":"Issue Reporting","text":"<p>If you encounter any issues or have any suggestions for improvement, please open an issue on our issue tracker.</p> <p>Provide as much detail as possible to help us understand and address the problem.</p>"},{"location":"development/setup/","title":"Environment setup","text":""},{"location":"development/setup/#table-of-contents","title":"Table of Contents","text":"<ul> <li>Clone repository</li> <li>Install poetry</li> <li>Install dev-dependencies</li> <li>Install Act \u2014 local CI</li> <li>Build &amp; deploy docs locally</li> <li>Build &amp; deploy docs on prod</li> <li>Deploying on PyPI</li> </ul>"},{"location":"development/setup/#clone-repository","title":"Clone repository","text":"<ul> <li>Via https: <code>git clone https://github.com/realkarych/rxconf.git</code></li> <li>Via ssh: <code>git@github.com:realkarych/rxconf.git</code></li> <li>Via GitHub CLI: <code>gh repo clone realkarych/rxconf</code></li> </ul>"},{"location":"development/setup/#install-poetry","title":"Install poetry","text":"<ul> <li>MacOS / *nix: <code>curl -sSL https://install.python-poetry.org | python3 -</code></li> <li>Windows: <code>(Invoke-WebRequest -Uri https://install.python-poetry.org -UseBasicParsing).Content | py -</code></li> </ul> <p>Once Poetry is installed you can execute the following:</p> <pre><code>poetry --version\n</code></pre>"},{"location":"development/setup/#install-dev-dependencies","title":"Install dev-dependencies","text":"<p>Note</p> <p>Assumed that you are in the directory with the project</p> <p>We implemented two versions of required dependencies:</p> <ol> <li><code>poetry install</code> \u2014 default dependencies that installs with package via pip.</li> <li><code>poetry install --with dev</code> \u2014 dependencies that installs with package via pip AND tools for testing, deploying documentation, deploying on PyPI.</li> </ol> <p>You should use the second option.</p>"},{"location":"development/setup/#install-act-local-ci","title":"Install Act \u2014 local CI","text":"<p>We use Act for local CI launching.</p> <p>It helps us to test RxConf on different environments use local machines instead of GitHub Actions.</p> <p>After the local CI passes, we contribute code to the origin.</p>"},{"location":"development/setup/#build-deploy-docs-locally","title":"Build &amp; deploy docs locally","text":"<p>Note</p> <p>Assumed that you are in the directory with the project and dependencies are already installed.</p> <p>To build and deploy docs locally, run <code>mkdocs serve</code>.</p>"},{"location":"development/setup/#build-deploy-docs-on-prod","title":"Build &amp; deploy docs on prod","text":"<p>Warning</p> <p>Our rule is to not deploy documentation to production manually.</p> <p>We use a CI action that automatically deploys the documentation to production whenever changes are pushed to the <code>main</code> branch.</p>"},{"location":"development/setup/#deploying-on-test-pypi","title":"Deploying on Test PyPI","text":"<p>Note</p> <p>Requires private access and performs only by core contributors. So you can create your own repo on https://test.pypi.org and provide token.</p> <p>Before deploying to the official PyPI repository, we first upload and test our package on Test PyPI. This allows us to ensure that everything works correctly and to catch any potential issues before making the package publicly available.</p> <ol> <li> <p>Upload to Test PyPI:</p> <ul> <li>Add Test PyPI repo to poetry conf: <code>poetry config repositories.testpypi https://test.pypi.org/legacy/</code>.</li> <li>Add secret to conf: <code>poetry config pypi-token.testpypi &lt;token&gt;</code></li> <li>Publish: <code>poetry publish --repository testpypi</code></li> </ul> </li> <li> <p>Test the package:</p> <p>Install the package from Test PyPI and run tests to ensure everything is working correctly:</p> <p><code>pip install --index-url https://test.pypi.org/simple/rxconf/</code></p> </li> </ol>"},{"location":"development/setup/#deploying-on-pypi","title":"Deploying on PyPI","text":"<p>Warning</p> <p>Our rule is to not deploy library on PyPI from local.</p> <p>We use a CI action that automatically deploys the library to https://pypi.org/project/rxconf/ on new version tag introduction.</p>"}]}